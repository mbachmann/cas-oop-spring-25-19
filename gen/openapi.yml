openapi: 3.0.1
info:
  title: '"Web MVC Demo" API'
  version: '@springdoc.version@'
servers:
  - url: http://localhost:8080
security:
  - bearerAuth: []
paths:
  /api/persons/{id}:
    get:
      tags:
        - person-rest-controller
      operationId: getPersonById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Person'
    put:
      tags:
        - person-rest-controller
      operationId: updatePerson
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Person'
  /api/persons:
    post:
      tags:
        - person-rest-controller
      operationId: createPerson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Person'
  /api/persons/new:
    post:
      tags:
        - person-rest-controller
      operationId: newTodoItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Person'
  /api/persons/paged:
    get:
      tags:
        - person-rest-controller
      operationId: getPersonsPaged
      parameters:
        - name: pageNo
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: sortBy
          in: query
          required: false
          schema:
            type: string
            default: id
        - name: sortDir
          in: query
          required: false
          schema:
            type: string
            default: asc
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedPersonsDto'
  /api/persons/filtered:
    get:
      tags:
        - person-rest-controller
      operationId: getPersonsPaged_1
      parameters:
        - name: firstName
          in: query
          required: false
          schema:
            type: string
        - name: lastName
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
  /api/persons/:
    get:
      tags:
        - person-rest-controller
      operationId: getPersons
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
  /api/persons/delete/{id}:
    delete:
      tags:
        - person-rest-controller
      operationId: deletePerson
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
components:
  schemas:
    Person:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
    PagedPersonsDto:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Person'
        pageNo:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        last:
          type: boolean
  securitySchemes:
    bearerAuth:
      type: http
      name: bearerAuth
      scheme: bearer
      bearerFormat: JWT
